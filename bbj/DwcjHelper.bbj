use org.dwcj.events.IEventProxy
use org.dwcj.bridge.IDwcjBBjBridge

class public EventProxy implements IEventProxy

    field private Object obj!
    field private String method!

    method public EventProxy(Object obj!, String method!)
        #obj! = obj!
        #method! = method!
    methodend

    method public void onEvent(BBjEvent ev!)

            rem DWCJ declares certain event callbacks as private to prevent them from
            rem being accessible by users of the API
            rem hence this bridge has to use reflection in order to invoke the event callbacks
            rem after making them accessible
            rem potential improvement: clarify the proxy tpyes to get the method directly and
            rem avoid iterating the whole method list

            o! = #obj!


            l!=  java.util.Arrays.asList(o!.getClass().getDeclaredMethods())
            it! = l!.iterator()
            while it!.hasNext()
                m! = it!.next()
                if m!.getName() = #method! then break
            wend

            m!.setAccessible(BBjAPI.TRUE)
            m!.invoke(o!,ev!)

            rem this was the original invocation (keeping for reference):
            rem eval("o!."+#method!+"(ev!)")
    methodend

classend


class public DwcjHelper implements IDwcjBBjBridge

    method public CustomObject getEventProxy(Object obj!, String method!)
        methodret new EventProxy(obj!, method!)
    methodend
    
    method public CustomObject getEventProxy(Object obj!, String method!, String eventClass!)
        ep! = eval("new "+eventClass!+"(obj!, method!)")
        methodret ep!
    methodend
    
    method public int msgbox(String msg!, int options!, String title!)
        methodret msgbox(msg!,options!,title!)
    methodend 

    method public BBjControl createWidget(String class!, BBjWindow w!)
        wnd! = w!
        widget! = eval("new "+class!+"(wnd!)")
        methodret widget!
    methodend

    method public java.lang.Object invokeMethod(java.lang.Object e!, java.lang.String method!, java.util.ArrayList args!)
        cmd! = "e!."+method!+"("
        for i=0 to args!.size()-1
            cmd! = cmd! + "args!.get("+str(i)+"),"
        next
        cmd! = cmd!.substring(0,cmd!.length()-1)
        cmd! = cmd! + ")"
        result!=eval(cmd!)
        methodret result!
    methodend

classend